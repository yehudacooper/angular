{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/calc-result/calc-result.component.ts","webpack:///src/app/comps/calc-result/calc-result.component.html","webpack:///src/app/comps/show-result/show-result.component.ts","webpack:///src/app/comps/show-result/show-result.component.html","webpack:///src/app/services/results.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CalcResultComponent","myservice","operand","str","result","eval","resultsArr","push","console","log","matrixResultsArr","showhistory","operatorKey","onResultKey","createNewUl","showHistory","ShowResultComponent","ResultsService","providedIn","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,gBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAHJ,CACP,uEADO,EACO,0DADP,CAGI;;;;0HAGFA,S,EAAS;AAAA,uBAVlB,2DAUkB,EATlB,4FASkB,EARlB,4FAQkB;AARC,kBAGnB,uEAHmB,EAGL,0DAHK;AAQD,O;AALO,K;;;;;sEAKhBA,S,EAAS;cAZrB,sDAYqB;eAZZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,4FAFY,EAGZ,4FAHY,CADN;AAMRC,iBAAO,EAAE,CACP,uEADO,EACO,0DADP,CAND;AASRC,mBAAS,EAAE,EATH;AAURC,mBAAS,EAAE,CAAC,2DAAD;AAVH,S;AAYY,Q;;;;;;;;;;;;;;;;;;ACnBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYI;;AAA8C;;AAAQ;;;;;;AAAR;;AAAA;;;;;;AADlD;;AACI;;AACJ;;;;;;AADQ;;AAAA;;;;QDJKC,mB;AAKX,mCAAmBC,SAAnB,EAA8C;AAAA;;AAA3B,aAAAA,SAAA,GAAAA,SAAA;AAA8B;;;;mCAIzC,CACP;;;oCACWC,O,EAAe;AACzB;AACC,eAAKC,GAAL,IAAYD,OAAZ;AAEF;;;sCACU;AACT;AACA,eAAKE,MAAL,GAAc,KAAKD,GAAL,GAAW,KAAX,GAAmBE,IAAI,CAAC,KAAKF,GAAN,CAArC;AACA,eAAKF,SAAL,CAAeK,UAAf,CAA0BC,IAA1B,CAA+B,KAAKH,MAApC;AACA,eAAKD,GAAL,GAAW,EAAX;AACAK,iBAAO,CAACC,GAAR,CAAY,KAAKR,SAAL,CAAeK,UAA3B;AAGD;;;sCACU;AACT,eAAKL,SAAL,CAAeS,gBAAf,CAAgCH,IAAhC,CAAqC,KAAKN,SAAL,CAAeK,UAApD;AACA,eAAKL,SAAL,CAAeK,UAAf,GAA4B,EAA5B;AACAE,iBAAO,CAACC,GAAR,CAAY,KAAKR,SAAL,CAAeS,gBAA3B;AACD;;;sCACU;AACT,eAAKT,SAAL,CAAeU,WAAf,GAA6B,IAA7B;AACD;;;;;;;uBAhCUX,mB,EAAmB,gJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;;;;;;;;;;;;;;;ACRhC;;AAAiB;AAAA;AAAA;;AAAjB;;AAAoC;;AAAQ;AAAA,mBAAS,IAAAY,WAAA,yBAAT;AAA6C,WAA7C;;AAA+C;;AAAC;;AAC5F;;AAAQ;AAAA,mBAAS,IAAAA,WAAA,yBAAT;AAA6C,WAA7C;;AAA+C;;AAAC;;AACxD;;AAAQ;AAAA,mBAAS,IAAAA,WAAA,yBAAT;AAA6C,WAA7C;;AAA+C;;AAAC;;AACxD;;AAAQ;AAAA,mBAAS,IAAAA,WAAA,yBAAT;AAA6C,WAA7C;;AAA+C;;AAAC;;AACxD;;AAAQ;AAAA,mBAAS,IAAAA,WAAA,yBAAT;AAA6C,WAA7C;;AAA+C;;AAAC;;AACxD;;AAAQ;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAC;;AACjC;;AAAQ;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAa;;AAC7C;;AAAQ;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAY;;AAE5C;;AAAI;;AAAU;;AAEd;;;;AAXiB;;AASb;;AAAA;;AAEA;;AAAA;;;;;;;;;sEDHSf,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTR,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;gBAO7B,uD;iBAAU,U;;;;;;;;;;;;;;;;;;;;AEfb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGQ;;AAA2B;;AAAQ;;;;;;AAAR;;AAAA;;;;;;AAD/B;;AACI;;AACJ;;;;;;AADQ;;AAAA;;;;;;AAFZ;;AACI;;AAGJ;;;;;;AAHQ;;AAAA;;;;QDMKsB,mB;AAEX,mCAAmBf,SAAnB,EAA6C;AAAA;;AAA1B,aAAAA,SAAA,GAAAA,SAAA;AAA6B;;;;mCAExC,CACP;;;;;;;uBALUe,mB,EAAmB,gJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,oD;AAAA;AAAA;ACPhC;;;;AAAK;;;;;;;;;sEDOQA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTxB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AERhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKauB,c,GAKX,0BAAc;AAAA;;AAHd,WAAAX,UAAA,GAAsB,EAAtB;AACA,WAAAI,gBAAA,GAA8B,EAA9B;AACA,WAAAC,WAAA,GAAsB,KAAtB;AACiB,K;;;uBALNM,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAId,OAAO,CAACe,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'calculator-app';\r\n}\r\n","<app-calc-result></app-calc-result>\r\n<app-show-result></app-show-result>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from '@angular/forms'\r\nimport { AppComponent } from './app.component';\r\nimport { CalcResultComponent } from './comps/calc-result/calc-result.component';\r\nimport { ShowResultComponent } from './comps/show-result/show-result.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CalcResultComponent,\r\n    ShowResultComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ResultsService } from 'src/app/services/results.service';\r\n\r\n@Component({\r\n  selector: 'app-calc-result',\r\n  templateUrl: './calc-result.component.html',\r\n  styleUrls: ['./calc-result.component.css']\r\n})\r\nexport class CalcResultComponent implements OnInit {\r\n\r\n  str: string;\r\n  result: string;\r\n\r\n  constructor(public myservice: ResultsService) { }\r\n\r\n  @ViewChild('numInput') myInput: ElementRef;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  operatorKey(operand: string){\r\n    //  this.myInput.nativeElement.value += operand;\r\n     this.str += operand;\r\n\r\n  }\r\n  onResultKey(){\r\n    // tslint:disable-next-line:no-eval\r\n    this.result = this.str + ' = ' + eval(this.str);\r\n    this.myservice.resultsArr.push(this.result);\r\n    this.str = '';\r\n    console.log(this.myservice.resultsArr);\r\n\r\n\r\n  }\r\n  createNewUl(){\r\n    this.myservice.matrixResultsArr.push(this.myservice.resultsArr);\r\n    this.myservice.resultsArr = [];\r\n    console.log(this.myservice.matrixResultsArr);\r\n  }\r\n  showHistory(){\r\n    this.myservice.showhistory = true;\r\n  }\r\n\r\n}\r\n","<input #numInput [(ngModel)]=\"str\"> <button (click)=\"operatorKey($event.target.innerHTML)\">+</button>\r\n<button (click)=\"operatorKey($event.target.innerHTML)\">-</button>\r\n<button (click)=\"operatorKey($event.target.innerHTML)\">-</button>\r\n<button (click)=\"operatorKey($event.target.innerHTML)\">*</button>\r\n<button (click)=\"operatorKey($event.target.innerHTML)\">/</button>\r\n<button (click)=\"onResultKey()\">=</button>\r\n<button (click)=\"createNewUl()\">create new ul</button>\r\n<button (click)=\"showHistory()\">show history</button>\r\n\r\n<h3>{{result}}</h3>\r\n\r\n<ul *ngIf=\"myservice.resultsArr[0]\">\r\n    <li *ngFor=\"let calc of myservice.resultsArr\">{{calc}}</li>\r\n</ul>","import { Component, OnInit } from '@angular/core';\r\nimport { ResultsService } from 'src/app/services/results.service';\r\n\r\n@Component({\r\n  selector: 'app-show-result',\r\n  templateUrl: './show-result.component.html',\r\n  styleUrls: ['./show-result.component.css']\r\n})\r\nexport class ShowResultComponent implements OnInit {\r\n\r\n  constructor(public myservice:ResultsService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div *ngIf=\"myservice.showhistory\">\r\n    <ul *ngFor=\"let x of myservice.matrixResultsArr\">\r\n        <li *ngFor=\"let calc of x\">{{calc}}</li>\r\n    </ul>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResultsService {\r\n\r\n  resultsArr:string[] = [];\r\n  matrixResultsArr:string[][] = [];\r\n  showhistory:boolean = false;\r\n  constructor() { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}